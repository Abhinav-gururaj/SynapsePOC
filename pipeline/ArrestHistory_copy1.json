{
	"name": "ArrestHistory_copy1",
	"properties": {
		"activities": [
			{
				"name": "pl_start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_start",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "pl_complete",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_end",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"p_pipeline_master_run_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "pl_failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Failed",
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_failed",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"p_pipeline_master_run_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "pl_start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ArrestsCSV",
						"type": "DatasetReference",
						"parameters": {
							"LoadType": "History"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item(),'File')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "StageArrests",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "Stored procedure1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "DataflowStageArrests",
									"type": "DataFlowReference",
									"parameters": {
										"username": "-123"
									},
									"datasetParameters": {
										"Arrests": {
											"LoadType": {
												"value": "@pipeline().parameters.LoadType",
												"type": "Expression"
											}
										},
										"sink1": {
											"DBName": "mydedicatedsqlpool",
											"schema": "staging",
											"table": "Arrests"
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "synapsepoc1321-WorkspaceDefaultStorage",
										"type": "LinkedServiceReference"
									},
									"folderPath": "myfilesystem/Staging"
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "ArchiveProcessedFiles",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "StageArrests",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@Concat('Archive/Arrests/Arrests_', pipeline().parameters.LoadType)",
											"type": "Expression"
										},
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ArrestsCSV",
									"type": "DatasetReference",
									"parameters": {
										"LoadType": {
											"value": "@pipeline().parameters.LoadType",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CrimesJson",
									"type": "DatasetReference",
									"parameters": {
										"Folder": {
											"value": "@Concat('Archive/Arrests/Arrests_', pipeline().parameters.LoadType)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureParameters": {
									"converted_to_json": {
										"value": "True",
										"type": "Boolean"
									},
									"file_name": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "String"
									},
									"file_type": {
										"value": {
											"value": "@item().type",
											"type": "Expression"
										},
										"type": "String"
									},
									"md_insert_user": {
										"value": "Synapse_user",
										"type": "String"
									},
									"processed_to_staging": {
										"value": "True",
										"type": "Boolean"
									},
									"source_type": {
										"value": "datalake",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "synapsepoc1230-WorkspaceDefaultSqlServer",
								"type": "LinkedServiceReference",
								"parameters": {
									"DBName": "mydedicatedsqlpool"
								}
							}
						},
						{
							"name": "Stored procedure2",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ArchiveProcessedFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureParameters": {
									"file_name": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "String"
									},
									"md_update_user": {
										"value": "synapse_user",
										"type": "String"
									},
									"processed_to_staging": {
										"value": "True",
										"type": "Boolean"
									},
									"status_message": {
										"value": "Success",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "synapsepoc1230-WorkspaceDefaultSqlServer",
								"type": "LinkedServiceReference",
								"parameters": {
									"DBName": "mydedicatedsqlpool"
								}
							}
						},
						{
							"name": "Stored procedure2_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ArchiveProcessedFiles",
									"dependencyConditions": [
										"Failed",
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureParameters": {
									"file_name": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "String"
									},
									"md_update_user": {
										"value": "synapse_user",
										"type": "String"
									},
									"processed_to_staging": {
										"value": "False",
										"type": "Boolean"
									},
									"status_message": {
										"value": "error",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "synapsepoc1230-WorkspaceDefaultSqlServer",
								"type": "LinkedServiceReference",
								"parameters": {
									"DBName": "mydedicatedsqlpool"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"LoadType": {
				"type": "string",
				"defaultValue": "History"
			}
		},
		"folder": {
			"name": "SynapsePOC"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-05T10:34:19Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}